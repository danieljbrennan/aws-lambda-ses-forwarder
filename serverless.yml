service: ses-email-forwarder
frameworkVersion: '3'

params:
  default:
    bucket: 16-g-mail-test

provider:
  name: aws
  runtime: nodejs18.x
  region: ${opt:region, 'us-west-2'}
  stage: prod
  iam:
    role:
      Fn::GetAtt:
        - IAMRole
        - Arn
  deploymentBucket:
    name: sls-deployment-${aws:accountId}-${opt:region, 'us-west-2'}

functions:
  Forwarder:
    handler: index.handler
    events:
      - s3:
          bucket: ${param:bucket}
          event: s3:ObjectCreated:*
          existing: true   # We are using an existing bucket

plugins:
  - serverless-deployment-bucket

resources:
  Resources:
#    Route53HostedZone16Genetic:
#      Type: AWS::Route53::HostedZone
#      Properties:
#        HostedZoneConfig:
#          Comment: "Domain registered with AWS"
#        Name: "16geneticpersonalitytypes.com"
    Route53HostedZoneAdm:
      Type: AWS::Route53::HostedZone
      Properties:
        HostedZoneConfig:
          Comment: "Domain registered with AWS"
        Name: "adm-1.org"
#    Route53RecordSet:
#      Type: AWS::Route53::RecordSet
#      Properties:
#        HostedZoneId:
#          Ref: Route53HostedZone16Genetic
#        Name: 16geneticpersonalitytypes.com
#        Comment: Incoming email record for sub-domain
#        Type: MX
#        TTL: 900
#        ResourceRecords:
#          - "10 inbound-smtp.us-west-2.amazonaws.com"
    Route53RecordSetAdm:
      Type: AWS::Route53::RecordSet
      Properties:
        HostedZoneId:
          Ref: Route53HostedZoneAdm
        Name: adm-1.org
        Comment: Incoming email record for sub-domain
        Type: MX
        TTL: 900
        ResourceRecords:
          - "10 inbound-smtp.us-west-2.amazonaws.com"
    SESReceiptRuleSet:
      Type: AWS::SES::ReceiptRuleSet
      Properties:
        RuleSetName: 'INBOUND'
#    EmailRule1:
#      Type: AWS::SES::ReceiptRule
#      Properties:
#        RuleSetName: !Ref SESReceiptRuleSet
#        Rule:
#          Name: '16GPT'
#          Enabled: True
#          Recipients:
#            - 16geneticpersonalitytypes.com
#          Actions:
#            - S3Action:
#                BucketName: ${param:bucket}
#            - LambdaAction:
#                FunctionArn:
#                  Fn::GetAtt:
#                    - ForwarderLambdaFunction
#                    - Arn
    EmailRule2:
      Type: AWS::SES::ReceiptRule
      Properties:
        RuleSetName: !Ref SESReceiptRuleSet
        Rule:
          Name: 'adm-1'
          Enabled: True
          Recipients:
            - adm-1.org
          Actions:
            - S3Action:
                BucketName: ${param:bucket}
    S3BucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: ${param:bucket}
        PolicyDocument:
          Statement:
            - Sid: "AllowSESPutObject"
              Effect: "Allow"
              Principal:
                Service: "ses.amazonaws.com"
              Action:
                - "s3:PutObject"
              Resource: arn:aws:s3:::${param:bucket}/*
    IAMRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: 16G-Serverless-Deployment-${opt:region, 'us-west-2'}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - 'cloudformation.amazonaws.com'
                  - 'lambda.amazonaws.com'
              Action:
                - 'sts:AssumeRole'
        Policies:
          - PolicyName: ServerlessDeploymentPolicies-${opt:region, 'us-west-2'}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow   # Allow S3 actions to buckets with service prefix.
                  Resource:
                    - arn:aws:s3:::${param:bucket}*'
                    - arn:aws:lambda:::*
                  Action:
                    - 's3:*'
                    - 'lambda:*'
          - PolicyName: LambdaRole-${opt:region, 'us-west-2'}
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow   # Allow all IAM actions to roles prefixed with service
                  Resource:
                    - !Sub 'arn:aws:iam::${AWS::AccountId}:role/16G-Serverless-Deployment-Role'
                  Action:
                    - 'iam:PassRole'
